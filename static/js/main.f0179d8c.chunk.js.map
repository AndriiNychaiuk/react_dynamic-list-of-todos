{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["Selector","TodoInfo","todo","className","id","classNames","completed","title","TodoList","todos","onSelectTodo","onSetModalVisibility","map","type","onClick","TodoFilter","onSetVisibleTodos","useState","query","setQuery","useEffect","filter","toLowerCase","includes","onChange","target","value","all","active","placeholder","length","style","pointerEvents","Loader","TodoModal","selectedTodo","currentUser","onModalClosing","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","initialTodos","setInitialTodos","selectTodo","user","setUser","isModalVisible","setModalVisbility","visibleTodos","setVisibleTodos","userId","allTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0179d8c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onSetVisibleTodos: React.Dispatch<React.SetStateAction<Todo[]>>\n}\n\nenum Selector {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onSetVisibleTodos }) => {\n  const [query, setQuery] = useState('');\n  const handleSelectChange = ({\n    target,\n  }: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (target.value) {\n      case Selector.all:\n        onSetVisibleTodos(todos);\n        break;\n\n      case Selector.active:\n        onSetVisibleTodos(todos.filter(todo => !todo.completed));\n        break;\n\n      case Selector.completed:\n        onSetVisibleTodos(todos.filter(todo => todo.completed));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    onSetVisibleTodos(todos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase())));\n  }, [query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={({ target }) => setQuery(target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSetVisibleTodos(todos);\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <>\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td\n        className=\"is-vcentered\"\n      >\n        <i className={classNames('fas', {\n          'fa-check-square has-text-success': todo.completed,\n          'fa-exclamation-triangle has-text-danger': !todo.completed,\n        })}\n        />\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n        }, {\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n  onSelectTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n  onSetModalVisibility: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  onSetModalVisibility,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n        >\n          <TodoInfo todo={todo} />\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onSelectTodo(todo);\n                onSetModalVisibility(true);\n              }}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo | null\n  currentUser: User | null\n  onModalClosing: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  currentUser,\n  onModalClosing,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            {selectedTodo && (\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n            )}\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalClosing}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            {selectedTodo && (\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n            )}\n\n            {currentUser && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed && (\n                  <strong className=\"has-text-success\">Done</strong>\n                )}\n                {!selectedTodo?.completed && (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {' by '}\n\n                <a href={`mailto:${currentUser.email}`}>\n                  {currentUser.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [selectedTodo, selectTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [isModalVisible, setModalVisbility] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState(initialTodos);\n\n  useEffect(() => {\n    getTodos().then(allTodos => {\n      setInitialTodos(allTodos);\n      setVisibleTodos(allTodos);\n    });\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(currentUser => setUser(currentUser));\n    }\n  }, [selectedTodo]);\n\n  const handleModalClosing = () => {\n    selectTodo(null);\n    setUser(null);\n    setModalVisbility(false);\n  };\n\n  if (initialTodos.length === 0) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={initialTodos}\n                onSetVisibleTodos={setVisibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={visibleTodos}\n                onSelectTodo={selectTodo}\n                onSetModalVisibility={setModalVisbility}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalVisible && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          currentUser={user}\n          onModalClosing={handleModalClosing}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}